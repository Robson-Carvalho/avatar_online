version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      # CRUCIAL para o Kafka: O Zookeeper precisa do nome do broker
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    # A porta 2181 é opcional para expor ao host, mas útil para debug
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    # Depende do Zookeeper
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      # Conexão interna do Kafka com o Zookeeper (usa o nome do serviço)
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Configura os listeners interno (Docker) e externo (Host)
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      # CRUCIAL: Endereço para outros contêineres (app1) e para o host se conectarem
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    # Porta 29092 é a porta que usamos para acessar o Kafka do seu host, se necessário
    ports:
      - "29092:29092"

  app:
    build: .
    container_name: avatar-node
    depends_on:
      - db
      - kafka
    environment:
      - APP_CLUSTER_PORT=5701
      - APP_SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/avatar_db
      - SPRING_DATASOURCE_USERNAME=avatar_user
      - SPRING_DATASOURCE_PASSWORD=senha123
    network_mode: host
    ports:
      - "8080:8080"
      - "5701:5701"

  db:
    image: postgres:17
    container_name: postgres-node
    environment:
      POSTGRES_DB: avatar_db
      POSTGRES_USER: avatar_user
      POSTGRES_PASSWORD: senha123
    network_mode: host
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_node:/var/lib/postgresql/data

  frontend:
    image: node:18-alpine
    container_name: avatar-frontend
    working_dir: /app
    volumes:
      - /home/tec502/avatar_online/frontend:/app
    command: sh -c "npx http-server -p 3000"
    ports:
      - "3000:3000"

volumes:
  postgres_data_node: