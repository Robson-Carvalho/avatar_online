version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - "9092:9092"
    networks:
      - kafka-network

  app:
    build: .
    container_name: avatar-node
    depends_on:
      - db
      - kafka
    environment:
      - APP_CLUSTER_PORT=5701
      - APP_SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/avatar_db
      - SPRING_DATASOURCE_USERNAME=avatar_user
      - SPRING_DATASOURCE_PASSWORD=senha123
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # ✅ Conecta via nome do serviço DENTRO do docker
    ports:
      - "8080:8080"
      - "5701:5701"
    networks:
      - kafka-network

  db:
    image: postgres:17
    container_name: postgres-node
    environment:
      POSTGRES_DB: avatar_db
      POSTGRES_USER: avatar_user
      POSTGRES_PASSWORD: senha123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_node:/var/lib/postgresql/data
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  postgres_data_node: